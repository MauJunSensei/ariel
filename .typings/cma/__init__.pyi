"""Minimal type stubs for the `cma` package used in this project.

This file provides lightweight Any-based signatures to silence Pyright/Pylance
missing-stub reports. If you want precise typing later, consider running
`stubgen` (mypy) or writing fuller .pyi signatures for the APIs you use.
"""
from typing import Any, Sequence

class CMAEvolutionStrategy:
    def __init__(self, x0: Sequence[float], sigma0: float, opts: dict[str, Any] | None = ...) -> None: ...
    def ask(self, *args: Any, **kwargs: Any) -> Any: ...
    def tell(self, *args: Any, **kwargs: Any) -> Any: ...
    def result(self) -> Any: ...

def fmin2(*args: Any, **kwargs: Any) -> Any: ...
def fmin(*args: Any, **kwargs: Any) -> Any: ...
def CMA(x0: Sequence[float], sigma0: float, opts: dict[str, Any] | None = ...) -> CMAEvolutionStrategy: ...
